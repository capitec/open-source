import"../chunks-js/chunk.PWEUJ7R3.js";import{b as s,c as d}from"../chunks-js/chunk.LME64W74.js";import{a as o}from"../chunks-js/chunk.R4IMIBZU.js";import{c as a}from"../chunks-js/chunk.QC5ZUB6O.js";import{d as r}from"../chunks-js/chunk.YQLTAQFI.js";import"../chunks-js/chunk.ZO5UBYOG.js";import"../chunks-js/chunk.CHYIO324.js";import{b as i}from"../chunks-js/chunk.3GEUDTAZ.js";import{h as y,l as c,o as m}from"../chunks-js/chunk.2ZZQBHAA.js";c();m();var p=y(d(),1);var h=["_self","_blank","_parent","_top"],B={title:"UI Components/Hyperlink",component:"omni-hyperlink",argTypes:{size:{control:"radio",options:["default","small"]},target:{control:"radio",options:h}}},L={render:e=>i`
    <omni-hyperlink
      data-testid="test-hyperlink"
      label="${o(e.label)}"
      href="${o(e.href)}"
      target="${o(e.target)}"
      ?disabled="${e.disabled}"
      ?inline="${e.inline}"
      size="${e.size}"></omni-hyperlink>
  `,name:"Interactive",args:{label:"Click",href:"",disabled:!1,inline:!1,size:""},play:async e=>{let t=a(e.canvasElement).getByTestId("test-hyperlink"),n=p.fn();t.addEventListener("click",()=>n()),await s.click(t,{pointerEventsCheck:0}),await s.click(t,{pointerEventsCheck:0}),await r(n).toBeCalledTimes(2)}},k={render:e=>i`<omni-hyperlink data-testid="test-hyperlink" label="${e.label}"></omni-hyperlink>`,name:"Label",description:"Set the text content of the component.",args:{label:"Click"},play:async e=>{let t=a(e.canvasElement).getByTestId("test-hyperlink");await r(t.shadowRoot.querySelector("a")).toHaveTextContent(k.args.label)}},b={render:e=>i`<omni-hyperlink data-testid="test-hyperlink" label="${e.label}" size="${e.size}"></omni-hyperlink>`,name:"Size",description:"Set the component to a predefined size.",args:{label:"Click",size:"small"},play:async e=>{let t=a(e.canvasElement).getByTestId("test-hyperlink");await r(t).toHaveAttribute("size",b.args.size)}},f={render:e=>i`<omni-hyperlink data-testid="test-hyperlink" label="${e.label}" href="${e.href}" target="_blank"></omni-hyperlink>`,name:"Href",description:"Set the hypertext reference.",args:{label:"Click",href:"https://example.com"},play:async e=>{let t=a(e.canvasElement).getByTestId("test-hyperlink");await r(t).toHaveAttribute("href",f.args.href)}},_={render:e=>i`<omni-hyperlink
      data-testid="test-hyperlink"
      href="https://example.com"
      label="${e.label}"
      ?disabled="${e.disabled}"></omni-hyperlink>`,name:"Disabled",description:"Prevent interaction (pointer events).",args:{label:"Click",disabled:!0},play:async e=>{let t=a(e.canvasElement).getByTestId("test-hyperlink"),n=p.fn();t.addEventListener("click",()=>n()),await s.click(t,{pointerEventsCheck:0}),await s.click(t,{pointerEventsCheck:0}),await r(n).toBeCalledTimes(0)}},j={render:e=>i`<p data-testid="test-paragraph"> Inline <omni-hyperlink label="${e.label}" ?inline="${e.inline}"></omni-hyperlink> example </p>`,name:"Inline",description:"Render the component using its inline styles.",args:{label:"click",inline:!0},play:async e=>{let t=a(e.canvasElement).getByTestId("test-paragraph"),n=t.querySelector("omni-hyperlink");await r(t).toContainElement(n)}};export{_ as Disabled,f as Href,j as Inline,L as Interactive,k as Label,b as Size,B as default};
//# sourceMappingURL=Hyperlink.stories.js.map
