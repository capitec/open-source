{"version":3,"file":"Check.spec.js","sourceRoot":"","sources":["../../src/check/Check.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,iBAAiB,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAEzG,IAAI,CAAC,yBAAyB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC/C,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEtC,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC/C,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC/D,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE5C,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,wBAAwB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC9C,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEtC,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9C,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC9D,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE3C,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChD,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,yBAAyB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC/C,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEtC,MAAM,IAAI,GAAG,MAAM,YAAY,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QACrD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACrE,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAE7C,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,uCAAuC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC7D,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACjE,MAAM,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAEjD,gBAAgB;QAChB,MAAM,MAAM,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;QAC3C,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;QAE1D,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QAEpB,kBAAkB;QAClB,MAAM,gBAAgB,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACnD,MAAM,MAAM,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QACjD,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,iCAAiC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IACvD,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACvE,MAAM,oBAAoB,GAAG,KAAK,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QAE7D,gBAAgB;QAChB,MAAM,MAAM,CAAC,oBAAoB,CAAC,CAAC,WAAW,EAAE,CAAC;QACjD,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,4BAA4B,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAClD,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAClE,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAEnD,yBAAyB;QACzB,MAAM,MAAM,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE,CAAC;QAC5C,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;QAE3D,MAAM,KAAK,GAAG,MAAM,iBAAiB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAEtD,MAAM,KAAK,CAAC,KAAK,CAAC;YACd,KAAK,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAEvC,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,wBAAwB,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC9C,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAE9D,MAAM,MAAM,CAAC,MAAM,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACzD,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;IAC3D,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,qCAAqC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IAC3D,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QAC3E,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC;QAE7D,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,6CAA6C,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IACnE,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAEtC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACnF,MAAM,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;QAErE,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,MAAM,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,qCAAqC,CAAC,CAAC;IAChF,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { test, expect, getStoryArgs, mockEventListener, withCoverage } from '../utils/JestPlaywright.js';\n\ntest(`Check - Label Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/check/');\n\n        const args = await getStoryArgs(page, 'Label');\n        const check = page.locator('.Label').getByTestId('test-check');\n        const labelElement = check.locator('label');\n\n        await expect(labelElement).toHaveText(args.label);\n        await expect(check).toHaveScreenshot('check-label.png');\n    });\n});\n\ntest(`Check - Hint Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/check/');\n\n        const args = await getStoryArgs(page, 'Hint');\n        const check = page.locator('.Hint').getByTestId('test-check');\n        const hintElement = check.locator('.hint');\n\n        await expect(hintElement).toHaveText(args.hint);\n        await expect(check).toHaveScreenshot('check-hint.png');\n    });\n});\n\ntest(`Check - Error Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/check/');\n\n        const args = await getStoryArgs(page, 'Error_Label');\n        const check = page.locator('.Error_Label').getByTestId('test-check');\n        const errorElement = check.locator('.error');\n\n        await expect(errorElement).toHaveText(args.error);\n        await expect(check).toHaveScreenshot('check-error.png');\n    });\n});\n\ntest(`Check - Checked / Unchecked Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/check/');\n\n        const check = page.locator('.Checked').getByTestId('test-check');\n        const checkedElement = check.locator('.checked');\n\n        // Test checked.\n        await expect(checkedElement).toBeVisible();\n        await expect(check).toHaveScreenshot('check-checked.png');\n\n        await check.click();\n\n        // Test unchecked.\n        const uncheckedElement = check.locator('.checked');\n        await expect(uncheckedElement).not.toBeVisible();\n        await expect(check).toHaveScreenshot('check-unchecked.png');\n    });\n});\n\ntest(`Check - Indeterminate Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/check/');\n\n        const check = page.locator('.Indeterminate').getByTestId('test-check');\n        const indeterminateElement = check.locator('.indeterminate');\n\n        // Test checked.\n        await expect(indeterminateElement).toBeVisible();\n        await expect(check).toHaveScreenshot('check-indeterminate.png');\n    });\n});\n\ntest(`Check - Disabled Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/check/');\n\n        const check = page.locator('.Disabled').getByTestId('test-check');\n        const disabledElement = check.locator('.disabled');\n\n        // Test initial disabled.\n        await expect(disabledElement).toBeVisible();\n        await expect(check).toHaveScreenshot('check-disabled.png');\n\n        const click = await mockEventListener(check, 'click');\n\n        await check.click({\n            force: true\n        });\n\n        await expect(click).toBeCalledTimes(0);\n\n        await expect(check).toHaveScreenshot('check-disabled-click.png');\n    });\n});\n\ntest(`Check - Slot Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/check/');\n\n        const check = page.locator('.Slot').getByTestId('test-check');\n\n        await expect(await check.innerHTML()).toEqual('Slotted');\n        await expect(check).toHaveScreenshot('check-slot.png');\n    });\n});\n\ntest(`Check - Custom Check Icon Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/check/');\n\n        const check = page.locator('.Custom_Check_Icon').getByTestId('test-check');\n        const slotElement = check.locator('slot[name=\"check_icon\"]');\n\n        await expect(slotElement).toHaveCount(1);\n        await expect(check).toHaveScreenshot('check-custom-check-icon.png');\n    });\n});\n\ntest(`Check - Custom Indeterminate Icon Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/check/');\n\n        const check = page.locator('.Custom_Indeterminate_Icon').getByTestId('test-check');\n        const slotElement = check.locator('slot[name=\"indeterminate_icon\"]');\n\n        await expect(slotElement).toHaveCount(1);\n        await expect(check).toHaveScreenshot('check-custom-indeterminate-icon.png');\n    });\n});\n"]}