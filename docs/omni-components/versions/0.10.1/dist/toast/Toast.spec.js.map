{"version":3,"file":"Toast.spec.js","sourceRoot":"","sources":["../../src/toast/Toast.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { test, expect, withCoverage } from '../utils/JestPlaywright.js';\nimport type { Toast } from './Toast.js';\n\ntest(`Toast - Visual and Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = page.locator('.Interactive').getByTestId('test-toast');\n\n        await expect(toast).toHaveScreenshot('toast-initial.png');\n    });\n});\n\ntest(`Toast - Custom Slotted Content`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = page.locator('.Custom_Slotted_Content').getByTestId('test-toast');\n\n        await expect(toast).toHaveScreenshot('toast-initial.png');\n    });\n});\n\ntest(`Toast - Custom Slotted Prefix`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = page.locator('.Custom_Slotted_Prefix').getByTestId('test-toast');\n\n        await expect(toast).toHaveScreenshot('toast-initial.png');\n    });\n});\n\ntest(`Toast - Closeable`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = page.locator('.Closeable').getByTestId('test-toast');\n\n        await expect(toast).toHaveScreenshot('toast-initial.png');\n    });\n});\n\ntest(`Toast - Custom Slotted Close`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = page.locator('.Custom_Slotted_Close').getByTestId('test-toast');\n\n        await expect(toast).toHaveScreenshot('toast-initial.png');\n    });\n});\n\ntest(`Toast - Success Type`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = page.locator('.Type').getByTestId('test-toast');\n        await toast.evaluate(async (t: Toast) => {\n            t.type = 'success';\n            await t.updateComplete;\n        });\n\n        await expect(toast).toHaveScreenshot('toast-type.png');\n    });\n});\n\ntest(`Toast - Error Type`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = page.locator('.Type').getByTestId('test-toast');\n        await toast.evaluate(async (t: Toast) => {\n            t.type = 'error';\n            await t.updateComplete;\n        });\n\n        await expect(toast).toHaveScreenshot('toast-type.png');\n    });\n});\n\ntest(`Toast - Info Type`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = page.locator('.Type').getByTestId('test-toast');\n        await toast.evaluate(async (t: Toast) => {\n            t.type = 'info';\n            await t.updateComplete;\n        });\n\n        await expect(toast).toHaveScreenshot('toast-type.png');\n    });\n});\n\ntest(`Toast - Warning Type`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = page.locator('.Type').getByTestId('test-toast');\n        await toast.evaluate(async (t: Toast) => {\n            t.type = 'warning';\n            await t.updateComplete;\n        });\n\n        await expect(toast).toHaveScreenshot('toast-type.png');\n    });\n});\n\ntest(`Toast - No Type`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = page.locator('.Type').getByTestId('test-toast');\n        await toast.evaluate(async (t: Toast) => {\n            t.type = 'none';\n            await t.updateComplete;\n        });\n\n        await expect(toast).toHaveScreenshot('toast-type.png');\n    });\n});\n\ntest(`Toast - Show Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toast = await page.evaluateHandle(async () => {\n            await customElements.whenDefined('omni-toast');\n\n            const toastClass = customElements.get('omni-toast') as typeof Toast;\n            return toastClass.show({\n                type: 'info',\n                header: 'Test Header',\n                detail: 'Test Detail.'\n            });\n        });\n\n        await expect(await toast.screenshot()).toMatchSnapshot('toast-shown.png');\n    });\n});\n\ntest(`Toast - Configure Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/toast/');\n\n        const toastStack = await page.evaluateHandle(async () => {\n            await customElements.whenDefined('omni-toast');\n\n            const toastClass = customElements.get('omni-toast') as typeof Toast;\n\n            toastClass.configure({\n                closeable: true,\n                duration: 0,\n                position: 'top',\n                reverse: true,\n                stack: true\n            });\n\n            toastClass.show({\n                type: 'info',\n                header: 'Test Header 1',\n                detail: 'Test First Detail.'\n            });\n            toastClass.show({\n                type: 'success',\n                header: 'Test Header 2',\n                detail: 'Test Second Detail.'\n            });\n\n            return toastClass.current;\n        });\n\n        await expect(await toastStack.screenshot()).toMatchSnapshot('toasts-configured-shown.png');\n    });\n});\n"]}