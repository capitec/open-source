{"version":3,"file":"Calendar.spec.js","sourceRoot":"","sources":["../../src/calendar/Calendar.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { DateTime } from 'luxon';\nimport { test, expect, getStoryArgs, withCoverage } from '../utils/JestPlaywright.js';\nimport type { Calendar } from './Calendar.js';\n\ntest(`Calendar - Visual and Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/calendar/');\n\n        // Use LivePropertyEditor to set Calendar initial date (Use LPE to ensure code snippet is also updated in case it gets picked up in the screenshot)\n        await page.locator('#examples #inputField').nth(3).fill('2021-10-05');\n\n        const calendar = page.locator('.Interactive').getByTestId('test-calendar');\n\n        await expect(calendar).toHaveScreenshot('calendar-initial.png');\n\n        const controlLabel = calendar.locator('.control-label');\n        await expect(controlLabel).toHaveCount(1);\n\n        await controlLabel.click();\n        await controlLabel.click();\n\n        await expect(calendar).toHaveScreenshot('calendar-years.png');\n\n        const yearGrid = calendar.locator('.year-grid');\n        await expect(yearGrid).toHaveCount(1);\n\n        const yearButton = yearGrid.locator('.year').getByText('2020');\n        await expect(yearButton).toHaveCount(1);\n        await yearButton.click({\n            force: true\n        });\n\n        await expect(calendar).toHaveScreenshot('calendar-months.png');\n\n        const monthGrid = calendar.locator('.month-grid');\n        await expect(monthGrid).toHaveCount(1);\n\n        const monthButton = monthGrid.locator('.month').getByText('Dec');\n        await expect(monthButton).toHaveCount(1);\n        await monthButton.click({\n            force: true\n        });\n\n        await expect(calendar).toHaveScreenshot('calendar-days.png');\n\n        const daysGrid = calendar.locator('.day-grid');\n        await expect(daysGrid).toHaveCount(1);\n\n        //Find the day button at the specified position\n        const dayButton = calendar.locator('div.day > div.day-label').nth(15);\n        await expect(dayButton).toHaveCount(1);\n        await dayButton.click({\n            force: true\n        });\n        await expect(calendar).toHaveScreenshot('calendar-after.png');\n    });\n});\n\ntest(`Calendar - Value Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/calendar/');\n\n        const calendar = page.locator('.Value').getByTestId('test-calendar');\n        await calendar.evaluate(async (c: Calendar) => {\n            c.value = '2023-01-01';\n\n            await c.updateComplete;\n        });\n\n        await expect(calendar).toHaveScreenshot('calendar-initial.png');\n        await expect(calendar).toHaveAttribute('value', '2023-01-01');\n        await expect(await calendar.evaluate((c: Calendar) => c.value)).toBe('2023-01-01');\n    });\n});\n\ntest(`Calendar - Locale Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/calendar/');\n\n        const args = await getStoryArgs(page, 'Locale');\n        const calendar = page.locator('.Locale').getByTestId('test-calendar');\n\n        const localDate = DateTime.fromISO('2022-06-21', {\n            locale: args.locale\n        });\n        const isoDate = localDate.toISODate() as string;\n\n        // Prepare test data\n        await calendar.evaluate(\n            async (d: Calendar, args) => {\n                d.value = args.isoDate;\n\n                await d.updateComplete;\n            },\n            { isoDate }\n        );\n\n        await expect(calendar).toHaveScreenshot('calendar-initial.png');\n        await expect(calendar).toHaveAttribute('locale', args.locale);\n\n        const controlLabel = calendar.locator('.control-label');\n        await expect(controlLabel).toHaveCount(1);\n\n        await expect(controlLabel).toHaveText(localDate.monthLong + ' ' + localDate.year);\n    });\n});\n\ntest(`Calendar - Min Date Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/calendar/');\n\n        const args = await getStoryArgs(page, 'Min_Date');\n        const calendar = page.locator('.Min_Date').getByTestId('test-calendar');\n\n        await expect(calendar).toHaveScreenshot('calendar-initial.png');\n\n        await expect(calendar).toHaveAttribute('min-date', args.minDate);\n\n        const days = await calendar.locator('.day').all();\n        const isExcluded = days[17];\n\n        await expect(isExcluded).toHaveClass(/excluded/);\n\n        const preValue = await calendar.getAttribute('value');\n\n        await isExcluded.click({\n            force: true\n        });\n\n        await expect(calendar).toHaveAttribute('value', preValue as string);\n\n        const isIncluded = days[20];\n\n        await expect(isIncluded).not.toHaveClass(/excluded/);\n\n        await isIncluded.click({\n            force: true\n        });\n\n        await expect(calendar).not.toHaveAttribute('value', preValue as string);\n    });\n});\n\ntest(`Calendar - Max Date Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/calendar/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const args = await getStoryArgs(page, 'Max_Date');\n        const calendar = page.locator('.Max_Date').getByTestId('test-calendar');\n\n        await expect(calendar).toHaveScreenshot('calendar-initial.png');\n\n        await expect(calendar).toHaveAttribute('max-date', args.maxDate);\n\n        const days = await calendar.locator('.day').all();\n        const isExcluded = days[20];\n\n        await expect(isExcluded).toHaveClass(/excluded/);\n\n        const preValue = await calendar.getAttribute('value');\n\n        await isExcluded.click({\n            force: true\n        });\n\n        await expect(calendar).toHaveAttribute('value', preValue as string);\n\n        const isIncluded = days[15];\n\n        await expect(isIncluded).not.toHaveClass(/excluded/);\n\n        await isIncluded.click({\n            force: true\n        });\n\n        await expect(calendar).not.toHaveAttribute('value', preValue as string);\n    });\n});\n"]}