{"version":3,"file":"DatePicker.spec.js","sourceRoot":"","sources":["../../src/date-picker/DatePicker.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { DateTime } from 'luxon';\nimport {\n    testLabelBehaviour,\n    testHintBehaviour,\n    testErrorBehaviour,\n    testClearableBehaviour,\n    testCustomClearableSlotBehaviour,\n    testPrefixBehaviour,\n    testSuffixBehaviour\n} from '../core/OmniInputPlaywright.js';\nimport { test, expect, getStoryArgs, mockEventListener, withCoverage, type Page } from '../utils/JestPlaywright.js';\nimport type { DatePicker } from './DatePicker.js';\n\ntest(`Date Picker - Visual and Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/date-picker/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const datePicker = page.locator('.Value').getByTestId('test-date-picker');\n\n        // Prepare test data\n        await datePicker.evaluate(async (d: DatePicker) => {\n            d.value = '2021-10-05';\n\n            await d.updateComplete;\n        });\n\n        await expect(datePicker).toHaveScreenshot('date-picker-initial.png');\n\n        const controlButton = datePicker.locator('#control');\n\n        await expect(controlButton).toHaveCount(1);\n\n        await datePicker.click();\n\n        await expect(datePicker).toHaveScreenshot('date-picker-open.png');\n\n        const calendar = datePicker.locator('omni-calendar#calendar');\n        await expect(calendar).toHaveCount(1);\n        await expect(calendar).toBeVisible();\n\n        await expect(calendar).toHaveScreenshot('date-picker-calendar-open.png');\n\n        const controlLabel = calendar.locator('.control-label');\n        await expect(controlLabel).toHaveCount(1);\n\n        await controlLabel.click();\n        await controlLabel.click();\n\n        await expect(calendar).toHaveScreenshot('date-picker-calendar-years.png');\n\n        const yearGrid = calendar.locator('.year-grid');\n        await expect(yearGrid).toHaveCount(1);\n\n        const yearButton = yearGrid.locator('.year').getByText('2020');\n        await expect(yearButton).toHaveCount(1);\n        await yearButton.click({\n            force: true\n        });\n\n        // Compare screenshot of month grid.\n        await expect(calendar).toHaveScreenshot('date-picker-calendar-months.png');\n\n        const monthGrid = calendar.locator('.month-grid');\n        await expect(monthGrid).toHaveCount(1);\n\n        const monthButton = monthGrid.locator('.month').getByText('Dec');\n        await expect(monthButton).toHaveCount(1);\n        await monthButton.click({\n            force: true\n        });\n        // Compare screenshot of the calendar element when it displays the days in the month\n        await expect(calendar).toHaveScreenshot('date-picker-calendar-days.png');\n\n        const daysGrid = calendar.locator('.day-grid');\n        await expect(daysGrid).toHaveCount(1);\n\n        // Find the day button at the specified position.\n        const dayButton = calendar.locator('div.day > div.day-label').nth(15);\n        await expect(dayButton).toHaveCount(1);\n        await dayButton.click({\n            force: true\n        });\n\n        await expect(datePicker).toHaveAttribute('value', '2020-12-15');\n        await expect(datePicker).toHaveScreenshot('date-picker-after.png');\n    });\n});\n\ntest(`Date Picker - Value Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/date-picker/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const datePicker = page.locator('.Value').getByTestId('test-date-picker');\n        await datePicker.evaluate(async (d: DatePicker) => {\n            d.value = '2023-01-01';\n\n            await d.updateComplete;\n        });\n\n        await expect(datePicker).toHaveScreenshot('date-picker-initial.png');\n\n        await datePicker.click();\n\n        const calendar = datePicker.locator('omni-calendar#calendar');\n        await expect(calendar).toHaveCount(1);\n        await expect(calendar).toHaveAttribute('value', (await datePicker.getAttribute('value')) as string);\n    });\n});\n\ntest(`Date Picker - Locale Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        const localDate = DateTime.fromISO('2022-06-21');\n        const isoDate = localDate.toISODate() as string;\n        const testLocale = 'en-ZA';\n\n        await page.goto('/components/date-picker/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const datePicker = page.locator('.Locale').getByTestId('test-date-picker');\n\n        // Prepare test data\n        await datePicker.evaluate(\n            async (d: DatePicker, args) => {\n                d.locale = args.testLocale;\n                d.value = args.isoDate;\n\n                await d.updateComplete;\n            },\n            { isoDate, testLocale }\n        );\n\n        await expect(datePicker).toHaveScreenshot('date-picker-initial.png');\n\n        await datePicker.click();\n\n        const calendar = datePicker.locator('omni-calendar#calendar');\n        await expect(calendar).toHaveCount(1);\n\n        const controlLabel = calendar.locator('.control-label');\n        await expect(controlLabel).toHaveCount(1);\n\n        await expect(controlLabel).toHaveText(localDate.monthLong + ' ' + localDate.year);\n    });\n});\n\ntest(`Date Picker - Min Date Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/date-picker/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const args = await getStoryArgs(page, 'Min_Date');\n        const datePicker = page.locator('.Min_Date').getByTestId('test-date-picker');\n        await datePicker.evaluate(async (d: DatePicker, args) => {\n            d.value = args.value;\n\n            await d.updateComplete;\n        }, args);\n\n        await expect(datePicker).toHaveScreenshot('date-picker-initial.png');\n\n        await datePicker.click();\n\n        const calendar = datePicker.locator('omni-calendar#calendar');\n        await expect(calendar).toHaveCount(1);\n\n        await expect(calendar).toHaveAttribute('min-date', args.minDate);\n\n        const days = await calendar.locator('.day').all();\n        const isExcluded = days[17];\n\n        await expect(isExcluded).toHaveClass(/excluded/);\n\n        const preValue = await datePicker.getAttribute('value');\n\n        await isExcluded.click({\n            force: true\n        });\n\n        await expect(datePicker).toHaveAttribute('value', preValue as string);\n\n        const isIncluded = days[20];\n\n        await expect(isIncluded).not.toHaveClass(/excluded/);\n\n        await isIncluded.click({\n            force: true\n        });\n\n        await expect(datePicker).not.toHaveAttribute('value', preValue as string);\n    });\n});\n\ntest(`Date Picker - Max Date Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/date-picker/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const args = await getStoryArgs(page, 'Max_Date');\n        const datePicker = page.locator('.Max_Date').getByTestId('test-date-picker');\n        await datePicker.evaluate(async (d: DatePicker, args) => {\n            d.value = args.value;\n\n            await d.updateComplete;\n        }, args);\n\n        await expect(datePicker).toHaveScreenshot('date-picker-initial.png');\n\n        await datePicker.click();\n\n        const calendar = datePicker.locator('omni-calendar#calendar');\n        await expect(calendar).toHaveCount(1);\n\n        await expect(calendar).toHaveAttribute('max-date', args.maxDate);\n\n        const days = await calendar.locator('.day').all();\n        const isExcluded = days[20];\n\n        await expect(isExcluded).toHaveClass(/excluded/);\n\n        const preValue = await datePicker.getAttribute('value');\n\n        await isExcluded.click({\n            force: true\n        });\n\n        await expect(datePicker).toHaveAttribute('value', preValue as string);\n\n        const isIncluded = days[15];\n\n        await expect(isIncluded).not.toHaveClass(/excluded/);\n\n        await isIncluded.click({\n            force: true\n        });\n\n        await expect(datePicker).not.toHaveAttribute('value', preValue as string);\n    });\n});\n\ntest('Date Picker - Label Behaviour', testLabelBehaviour('omni-date-picker'));\ntest('Date Picker - Hint Behaviour', testHintBehaviour('omni-date-picker'));\ntest('Date Picker - Error Behaviour', testErrorBehaviour('omni-date-picker'));\ntest('Date Picker - Clearable Behaviour', testClearableBehaviour('omni-date-picker'));\ntest('Date Picker - Custom Clear Slot Behaviour', testCustomClearableSlotBehaviour('omni-date-picker'));\ntest('Date Picker - Prefix Behaviour', testPrefixBehaviour('omni-date-picker'));\ntest('Date Picker - Suffix Behaviour', testSuffixBehaviour('omni-date-picker'));\n\ntest(`Date Picker - Disabled Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/date-picker/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const args = await getStoryArgs(page, 'Disabled');\n        const datePicker = page.locator('.Disabled').getByTestId('test-date-picker');\n        await datePicker.evaluate(async (d: DatePicker, args) => {\n            d.value = args.value;\n\n            await d.updateComplete;\n        }, args);\n\n        await expect(datePicker).toHaveScreenshot('date-picker-initial.png');\n\n        const click = await mockEventListener(datePicker, 'click');\n\n        await datePicker.click({\n            force: true\n        });\n\n        await expect(click).toBeCalledTimes(0);\n\n        const calendar = datePicker.locator('omni-calendar#calendar');\n\n        if (!isMobile) {\n            await expect(calendar).toHaveCount(0);\n        } else {\n            await expect(calendar).not.toBeVisible();\n        }\n\n        await datePicker.evaluate((d: DatePicker) => (d.disabled = false));\n\n        await datePicker.click({\n            force: true\n        });\n\n        await expect(click).toBeCalledTimes(1);\n\n        await expect(calendar).toHaveCount(1);\n        await expect(calendar).toBeVisible();\n    });\n});\n"]}