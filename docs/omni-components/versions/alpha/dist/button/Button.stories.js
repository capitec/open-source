import"../chunks-js/chunk.J3F635EC.js";import{u as y}from"../chunks-js/chunk.EZFZPYM4.js";import"../chunks-js/chunk.HEGWAMTE.js";import"../chunks-js/chunk.BMVIQMEU.js";import"../chunks-js/chunk.MPJVWYSG.js";import"../chunks-js/chunk.FJG2EZL6.js";import{b as c,c as g}from"../chunks-js/chunk.SNS3RAAO.js";import{a as b}from"../chunks-js/chunk.7QF4VYJR.js";import{a as u}from"../chunks-js/chunk.CFP25WDL.js";import{c as r}from"../chunks-js/chunk.555UF2OF.js";import{d as s}from"../chunks-js/chunk.ZDXRLLLZ.js";import"../chunks-js/chunk.F27L6OQP.js";import"../chunks-js/chunk.7YN44Q4N.js";import"../chunks-js/chunk.CHYIO324.js";import{b as l}from"../chunks-js/chunk.CIM3NS6G.js";import{h as f,l as d,o as p}from"../chunks-js/chunk.2ZZQBHAA.js";d();p();var m=f(g(),1);var h=["primary","secondary","clear","white"],w=["left","top","right","bottom"],z={title:"UI Components/Button",component:"omni-button",argTypes:{type:{control:"radio",options:h},slotPosition:{control:"radio",options:w},"slot-position":{control:!1},"[Default Slot]":{control:"text"}}},U={render:t=>l`
    <omni-button
      data-testid="test-button"
      type="${t.type}"
      label="${u(t.label)}"
      slot-position="${t.slotPosition}"
      ?disabled=${t.disabled}>
      ${b(t["[Default Slot]"])}
    </omni-button>
  `,name:"Interactive",args:{type:"secondary",label:"Button",slotPosition:"top",disabled:!1,"[Default Slot]":y`<omni-icon icon="@material/thumb_up"></omni-icon>`},play:async t=>{let e=r(t.canvasElement).getByTestId("test-button"),o=m.fn();e.addEventListener("click",()=>o()),await c.click(e,{pointerEventsCheck:0}),await c.click(e,{pointerEventsCheck:0}),await s(o).toBeCalledTimes(2)}},_={render:t=>l` <omni-button type="${t.type}" label="${t.label}" data-testid="test-button"></omni-button> `,name:"Type",description:"Set the type of button to render using different combinations of primary and alternate colours.",args:{type:"primary",label:"Click"},play:async t=>{var n;let o=(n=r(t.canvasElement).getByTestId("test-button").shadowRoot)==null?void 0:n.getElementById("button"),a=o==null?void 0:o.classList.contains("primary");await s(a).toBeTruthy()}},B={render:t=>l` <omni-button label="${t.label}" data-testid="test-button"></omni-button> `,name:"Label",description:"Set a text value to display within.",args:{label:"Click"},play:async t=>{var n,i;let o=(n=r(t.canvasElement).getByTestId("test-button").shadowRoot)==null?void 0:n.getElementById("label"),a=(o==null?void 0:o.innerText)===((i=B.args)==null?void 0:i.label);await s(a).toBeTruthy()}},G={render:()=>l`
    <omni-button data-testid="test-button">
      <omni-icon size="default" icon="./assets/images/direction.svg"></omni-icon>
    </omni-button>
  `,name:"Slot",description:"Set html content to display within.",args:{},play:async t=>{var n;let o=(n=r(t.canvasElement).getByTestId("test-button").shadowRoot)==null?void 0:n.querySelector("slot"),a=o==null?void 0:o.assignedElements().find(i=>i.tagName.toLowerCase()==="omni-icon");await s(a).toBeTruthy()}},J={render:t=>l` <omni-button disabled label="${t.label}" data-testid="test-button"></omni-button> `,name:"Disabled",description:"Prevent interaction (pointer events).",args:{label:"Disabled"},play:async t=>{var i;let e=r(t.canvasElement).getByTestId("test-button"),o=(i=e.shadowRoot)==null?void 0:i.getElementById("button"),a=o==null?void 0:o.classList.contains("disabled");await s(a).toBeTruthy();let n=m.fn();e.addEventListener("click",T=>{n()}),await s(()=>c.click(e)).rejects.toThrow(/pointer-events: none/),await s(()=>c.click(e)).rejects.toThrow(/pointer-events: none/),await s(n).toBeCalledTimes(0)}};export{J as Disabled,U as Interactive,B as Label,G as Slot,_ as Type,z as default};
//# sourceMappingURL=Button.stories.js.map
