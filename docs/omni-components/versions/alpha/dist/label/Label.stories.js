import"../chunks-js/chunk.UG7N6GYS.js";import{a as p}from"../chunks-js/chunk.PJH7M65U.js";import{a as i}from"../chunks-js/chunk.G3QHRCKP.js";import{c as a}from"../chunks-js/chunk.N6OKW4B2.js";import{d as n}from"../chunks-js/chunk.W54IKPJD.js";import"../chunks-js/chunk.CWNKFZ3E.js";import"../chunks-js/chunk.S2K25ADN.js";import{b as o}from"../chunks-js/chunk.F6MIXR4E.js";import{m as s,p as r}from"../chunks-js/chunk.BF43NN75.js";s();r();var b=["default","title","subtitle","strong"],O={title:"UI Components/Label",component:"omni-label",argTypes:{type:{control:{type:"radio",options:b},"[Default Slot]":{control:"text"}}}},m={render:t=>o`<omni-label data-testid="test-label" label="${p(t.label)}" type="${t.type}">${i(t["[Default Slot]"])}</omni-label> `,name:"Interactive",args:{label:"Label",type:"default","[Default Slot]":void 0},play:async t=>{var e;let l=a(t.canvasElement).getByTestId("test-label");await n(l.shadowRoot).toHaveTextContent((e=m.args)==null?void 0:e.label)},frameworkSources:[{framework:"React",load:t=>`import { OmniLabel } from "@capitec/omni-components-react/label";

const App = () => <OmniLabel${t.label?` label='${t.label}'`:""}${t.type?` type='${t.type}'`:""}${t["[Default Slot]"]?`>
                      ${t["[Default Slot]"]}
                  </OmniLabel>`:"/>"};`}]},y={render:t=>o` <omni-label data-testid="test-label" label="${t.label}" type="${t.type}"> </omni-label> `,description:"Set the text to display with the styles of a title.",args:{label:"Title",type:"title"},play:async t=>{var e;let l=a(t.canvasElement).getByTestId("test-label");await n(l.shadowRoot).toHaveTextContent((e=y.args)==null?void 0:e.label)},frameworkSources:[{framework:"React",load:t=>`import { OmniLabel } from "@capitec/omni-components-react/label";

const App = () => <OmniLabel${t.label?` label='${t.label}'`:""}${t.type?` type='${t.type}'`:""}/>;`}]},c={render:t=>o` <omni-label data-testid="test-label" label="${t.label}" type="${t.type}"> </omni-label> `,description:"Set the text to display with the styles of a subtitle.",args:{label:"Subtitle",type:"subtitle"},play:async t=>{var e;let l=a(t.canvasElement).getByTestId("test-label");await n(l.shadowRoot).toHaveTextContent((e=c.args)==null?void 0:e.label)}},d={render:t=>o` <omni-label data-testid="test-label" label="${t.label}" type="${t.type}"> </omni-label> `,description:"Set the text to display with a bold font style.",args:{label:"Strong",type:"strong"},play:async t=>{var e;let l=a(t.canvasElement).getByTestId("test-label");await n(l.shadowRoot).toHaveTextContent((e=d.args)==null?void 0:e.label)}};export{m as Interactive,d as Strong,c as Subtitle,y as Title,O as default};
//# sourceMappingURL=Label.stories.js.map
