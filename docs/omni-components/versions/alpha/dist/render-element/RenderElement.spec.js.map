{"version":3,"file":"RenderElement.spec.js","sourceRoot":"","sources":["../../src/render-element/RenderElement.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { fn } from 'jest-mock';\nimport { test, expect, getStoryArgs, withCoverage } from '../utils/JestPlaywright.js';\nimport type { RenderElement } from './RenderElement.js';\n\ntest(`Render Element - Lit Template Visual and Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/render-element/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const args = await getStoryArgs(page, 'Lit_Template');\n        const renderElement = page.locator('.Lit_Template').getByTestId('test-render');\n        const data = args.data;\n\n        const span1 = renderElement.locator('span');\n        await expect(span1).toHaveText(JSON.stringify(data));\n        await expect(renderElement).toHaveScreenshot('render-element-before.png');\n\n        data.hello = 'everyone';\n        await renderElement.evaluate((r: RenderElement, data) => (r.data = data), data);\n\n        const loading = renderElement.locator('omni-loading-icon');\n        await expect(loading).toHaveCount(1);\n        await expect(renderElement).toHaveScreenshot('render-element-loading.png');\n\n        const span2 = renderElement.locator('span');\n        await expect(span2).toHaveText(JSON.stringify(data));\n        await expect(renderElement).toHaveScreenshot('render-element-after.png');\n    });\n});\n\ntest(`Render Element - HTML Element Instance Visual and Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/render-element/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const clickDialog = fn();\n        page.on('dialog', (d) => {\n            clickDialog();\n            d.accept();\n        });\n\n        const args = await getStoryArgs(page, 'HTML_Element_Instance');\n        const renderElement = page.locator('.HTML_Element_Instance').getByTestId('test-render');\n        const data = args.data;\n\n        const span1 = renderElement.locator('span');\n        await expect(span1).toHaveText(JSON.stringify(data));\n        await expect(renderElement).toHaveScreenshot('render-element-before.png');\n\n        data.hello = 'everyone';\n        await renderElement.evaluate((r: RenderElement, data) => (r.data = data), data);\n\n        const loading = renderElement.locator('omni-loading-icon');\n        await expect(loading).toHaveCount(1);\n        await expect(renderElement).toHaveScreenshot('render-element-loading.png');\n\n        const span2 = renderElement.locator('span');\n        await expect(span2).toHaveText(JSON.stringify(data));\n        await expect(renderElement).toHaveScreenshot('render-element-after.png');\n        await span2.click({\n            force: true\n        });\n\n        await expect(clickDialog).toBeCalledTimes(1);\n    });\n});\n\ntest(`Render Element - HTML String Visual and Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/render-element/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const args = await getStoryArgs(page, 'HTML_String');\n        const renderElement = page.locator('.HTML_String').getByTestId('test-render');\n        const data = args.data;\n\n        const span1 = renderElement.locator('span');\n        await expect(span1).toHaveText(JSON.stringify(data));\n        await expect(renderElement).toHaveScreenshot('render-element-before.png');\n\n        data.hello = 'everyone';\n        await renderElement.evaluate((r: RenderElement, data) => (r.data = data), data);\n\n        const loading = renderElement.locator('omni-loading-icon');\n        await expect(loading).toHaveCount(1);\n        await expect(renderElement).toHaveScreenshot('render-element-loading.png');\n\n        const span2 = renderElement.locator('span');\n        await expect(span2).toHaveText(JSON.stringify(data));\n        await expect(renderElement).toHaveScreenshot('render-element-after.png');\n    });\n});\n"]}