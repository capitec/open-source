{"version":3,"file":"SearchField.spec.js","sourceRoot":"","sources":["../../src/search-field/SearchField.spec.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,QAAQ,MAAM,WAAW,CAAC;AACtC,OAAO,EACH,kBAAkB,EAClB,iBAAiB,EACjB,kBAAkB,EAClB,kBAAkB,EAClB,sBAAsB,EACtB,gCAAgC,EAChC,mBAAmB,EACnB,mBAAmB,EACnB,qBAAqB,EACxB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAa,MAAM,4BAA4B,CAAC;AAGnF,IAAI,CAAC,4BAA4B,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE,EAAE;IAC/D,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAC7C,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEhD,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC;QAC1D,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAc,EAAE,EAAE;YAC1C,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YACb,MAAM,CAAC,CAAC,cAAc,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;QAE/D,MAAM,YAAY,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC;QACnC,MAAM,IAAI,CAAC,cAAc,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC;QAChE,MAAM,WAAW,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE;YAChC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAAE,MAAc,CAAC,YAAY,EAAE,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC;QAEH,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAEtD,MAAM,KAAK,GAAG,cAAc,CAAC;QAC7B,MAAM,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,MAAM,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAE5C,MAAM,MAAM,CAAC,YAAY,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACzD,MAAM,MAAM,CAAC,WAAW,CAAC,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;AACxC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;AACvC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;AACxC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;AACxC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC;AAC5C,gCAAgC,CAAC,mBAAmB,CAAC,CAAC;AACtD,mBAAmB,CAAC,mBAAmB,CAAC,CAAC;AACzC,mBAAmB,CAAC,mBAAmB,CAAC,CAAC;AACzC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC","sourcesContent":["import * as jestMock from 'jest-mock';\nimport {\n    testLabelBehaviour,\n    testHintBehaviour,\n    testErrorBehaviour,\n    testValueBehaviour,\n    testClearableBehaviour,\n    testCustomClearableSlotBehaviour,\n    testPrefixBehaviour,\n    testSuffixBehaviour,\n    testDisabledBehaviour\n} from '../core/OmniInputPlaywright.js';\nimport { test, expect, withCoverage, type Page } from '../utils/JestPlaywright.js';\nimport type { SearchField } from './SearchField.js';\n\ntest(`Search Field - Interactive`, async ({ page, browserName }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/search-field/');\n        await page.evaluate(() => document.fonts.ready);\n\n        const searchField = page.locator('[data-testid]').first();\n        searchField.evaluate(async (t: SearchField) => {\n            t.value = '';\n            await t.updateComplete;\n        });\n        await expect(searchField).toHaveScreenshot('search-field.png');\n\n        const interactions = jestMock.fn();\n        await page.exposeFunction('jestInteract', () => interactions());\n        await searchField.evaluate((node) => {\n            node.addEventListener('input', () => (window as any).jestInteract());\n        });\n\n        const inputField = searchField.locator('#inputField');\n\n        const value = 'search value';\n        await inputField.type(value);\n\n        await expect(inputField).toHaveValue(value);\n\n        await expect(interactions).toBeCalledTimes(value.length);\n        await expect(searchField).toHaveScreenshot('search-field-value.png');\n    });\n});\n\ntestLabelBehaviour('omni-search-field');\ntestHintBehaviour('omni-search-field');\ntestErrorBehaviour('omni-search-field');\ntestValueBehaviour('omni-search-field');\ntestClearableBehaviour('omni-search-field');\ntestCustomClearableSlotBehaviour('omni-search-field');\ntestPrefixBehaviour('omni-search-field');\ntestSuffixBehaviour('omni-search-field');\ntestDisabledBehaviour('omni-search-field');\n"]}