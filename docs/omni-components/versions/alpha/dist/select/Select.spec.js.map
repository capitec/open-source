{"version":3,"file":"Select.spec.js","sourceRoot":"","sources":["../../src/select/Select.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    testLabelBehaviour,\n    testHintBehaviour,\n    testErrorBehaviour,\n    testClearableBehaviour,\n    testCustomClearableSlotBehaviour,\n    testPrefixBehaviour,\n    testSuffixBehaviour\n} from '../core/OmniInputPlaywright.js';\nimport { test, expect, getStoryArgs, mockEventListener, withCoverage, type Page } from '../utils/JestPlaywright.js';\nimport type { Select, SelectItems, SelectTypes } from './Select.js';\n\nconst displayItems = [\n    { id: '1', label: 'Peter Parker' },\n    { id: '2', label: 'James Howlett' },\n    { id: '3', label: 'Tony Stark' },\n    { id: '4', label: 'Steve Rodgers' },\n    { id: '5', label: 'Bruce Banner' },\n    { id: '6', label: 'Wanda Maximoff' },\n    { id: '7', label: 'TChalla' },\n    { id: '8', label: 'Henry P. McCoy' },\n    { id: '9', label: 'Carl Lucas' },\n    { id: '10', label: 'Frank Castle' }\n];\n\nconst stringItems = ['Bruce Wayne', 'Clark Kent', 'Barry Allen', 'Arthur Curry', 'Hal Jordan'];\n\ntest(`Select - Visual and Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const selectComponent = page.locator('.Interactive').getByTestId('test-select');\n        await expect(selectComponent).toHaveScreenshot('select-initial.png');\n\n        const valueChange = await mockEventListener(selectComponent, 'change');\n\n        await selectComponent.evaluate(async (s: Select, displayItems) => {\n            s.items = displayItems;\n            await s.updateComplete;\n        }, displayItems);\n\n        await selectComponent.click();\n\n        if (isMobile) {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveScreenshot('select-dialog.png');\n        } else {\n            const container = selectComponent.locator('#items-container');\n            await expect(container).toHaveScreenshot('select-items-container.png');\n        }\n\n        // Get the items container and locate the nested items\n        const items = selectComponent.locator('.item');\n        await expect(items).toHaveCount(10);\n\n        // Find the first item in the items container\n        const item = selectComponent.locator('.item').first();\n        await expect(item).toHaveCount(1);\n        await item.click();\n\n        await expect(valueChange).toBeCalledTimes(1);\n        await expect(selectComponent).toHaveAttribute('value', JSON.stringify(displayItems[0]));\n        await expect(selectComponent).toHaveScreenshot('select-after.png');\n    });\n});\n\ntest(`Select - Async Per Item Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const selectComponent = page.locator('.Async_Per_Item').getByTestId('test-select');\n        await expect(selectComponent).toHaveScreenshot('select-initial.png');\n\n        const valueChange = await mockEventListener(selectComponent, 'change');\n\n        await selectComponent.evaluate(async (s: Select, displayItems) => {\n            async function promiseDisplayItems(data: Record<string, unknown>[]) {\n                await new Promise<void>((r) => setTimeout(() => r(), 5));\n                return data as SelectTypes;\n            }\n            s.items = promiseDisplayItems(displayItems);\n            await s.updateComplete;\n        }, displayItems);\n\n        await selectComponent.click();\n        // Added for cases where the items do not load in time before taking a screenshot.\n        await page.waitForTimeout(200);\n\n        await expect(selectComponent).toHaveScreenshot('select-open.png');\n\n        if (isMobile) {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveScreenshot('select-dialog.png');\n        } else {\n            const container = selectComponent.locator('#items-container');\n            await expect(container).toHaveScreenshot('select-items-container.png');\n        }\n\n        const items = selectComponent.locator('.item');\n        await expect(items).toHaveCount(10);\n\n        const item = selectComponent.locator('.item').first();\n        await expect(item).toHaveCount(1);\n        await item.click();\n\n        await expect(valueChange).toBeCalledTimes(1);\n        await expect(selectComponent).toHaveAttribute('value', JSON.stringify(displayItems[0]));\n        await expect(selectComponent).toHaveScreenshot('select-after.png');\n    });\n});\n\ntest(`Select - String Array Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const args = await getStoryArgs(page, 'String_Array');\n        const argItems = args.items as Record<string, unknown>[];\n        const selectComponent = page.locator('.String_Array').getByTestId('test-select');\n        await expect(selectComponent).toHaveScreenshot('select-initial.png');\n\n        const valueChange = await mockEventListener(selectComponent, 'change');\n\n        await selectComponent.click();\n        await expect(selectComponent).toHaveScreenshot('select-open.png');\n\n        if (isMobile) {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveScreenshot('select-dialog.png');\n        } else {\n            const container = selectComponent.locator('#items-container');\n            await expect(container).toHaveScreenshot('select-items-container.png');\n        }\n\n        const items = selectComponent.locator('.item');\n        await expect(items).toHaveCount(5);\n\n        const item = selectComponent.locator('.item').first();\n        await expect(item).toHaveCount(1);\n        await item.click();\n\n        await expect(valueChange).toBeCalledTimes(1);\n        await expect(selectComponent).toHaveAttribute('value', argItems[0]);\n        await expect(selectComponent).toHaveScreenshot('select-after.png');\n    });\n});\n\ntest(`Select - Selection Render Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const args = await getStoryArgs(page, 'Selection_Renderer');\n        const argItems = args.items as Record<string, unknown>[];\n        const selectComponent = page.locator('.Selection_Renderer').getByTestId('test-select');\n        await page.waitForTimeout(100);\n        await expect(selectComponent).toHaveScreenshot('select-initial.png');\n\n        const valueChange = await mockEventListener(selectComponent, 'change');\n\n        await selectComponent.evaluate(async (s: Select) => {\n            s.renderSelection = async (item: any) => {\n                await new Promise((resolve, reject) => {\n                    setTimeout(resolve, 10);\n                });\n                const i = document.createElement('i');\n                i.innerText = item;\n                i.style.color = 'blue';\n                return i;\n            };\n            await s.updateComplete;\n        });\n\n        await expect(selectComponent).toHaveScreenshot('select-renderer-before.png');\n        await selectComponent.click();\n        await page.waitForTimeout(100);\n\n        if (isMobile) {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveScreenshot('select-dialog.png');\n        } else {\n            const container = selectComponent.locator('#items-container');\n            await expect(container).toHaveScreenshot('select-items-container.png');\n        }\n\n        await expect(selectComponent).toHaveScreenshot('select-open.png');\n        const items = selectComponent.locator('.item');\n        await expect(items).toHaveCount(5);\n\n        const item = selectComponent.locator('.item').first();\n        await expect(item).toHaveCount(1);\n        await item.click();\n        // Added timeout to wait for items to render.\n        await page.waitForTimeout(100);\n\n        const selectionRender = selectComponent.locator('omni-render-element');\n        await expect(selectComponent).toHaveAttribute('value', argItems[0]);\n        await expect(selectionRender).toHaveCount(1);\n        await expect(selectComponent).toHaveScreenshot('select-after.png');\n    });\n});\n\ntest(`Select - Empty Message Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const selectComponent = page.locator('.Empty_Message').getByTestId('test-select');\n        await expect(selectComponent).toHaveScreenshot('select-initial.png');\n\n        const valueChange = await mockEventListener(selectComponent, 'change');\n\n        await selectComponent.click();\n\n        if (isMobile) {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveScreenshot('select-dialog.png');\n        } else {\n            const container = selectComponent.locator('#items-container');\n            await expect(container).toHaveScreenshot('select-items-container.png');\n        }\n\n        const items = selectComponent.locator('.items');\n        await expect(items).toHaveCount(1);\n\n        const item = items.locator('.none').first();\n        await expect(item).toHaveCount(1);\n\n        await expect(item).toHaveText('No items provided');\n        await expect(valueChange).toBeCalledTimes(0);\n    });\n});\n\ntest(`Select - Disabled Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const selectComponent = page.locator('.Disabled').getByTestId('test-select');\n        await expect(selectComponent).toHaveScreenshot('select-initial.png');\n\n        const click = await mockEventListener(selectComponent, 'click');\n\n        await selectComponent.click({\n            force: true\n        });\n\n        await expect(click).toBeCalledTimes(0);\n\n        if (!isMobile) {\n            const itemContainer = selectComponent.locator('#items-container');\n            await expect(itemContainer).toHaveCount(0);\n        } else {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveCount(1);\n            await expect(dialog).not.toBeVisible();\n        }\n\n        await selectComponent.evaluate((d: Select) => (d.disabled = false));\n\n        await selectComponent.click({\n            force: true\n        });\n\n        await expect(click).toBeCalledTimes(1);\n\n        if (!isMobile) {\n            const itemContainer = selectComponent.locator('#items-container');\n            await expect(itemContainer).toHaveCount(1);\n        } else {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveCount(1);\n        }\n    });\n});\n\ntest(`Select - Custom Control Slot Visual`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const selectComponent = page.locator('.Custom_Control_Slot').getByTestId('test-select');\n\n        const control = selectComponent.locator('#control');\n        await expect(control).toHaveCount(1);\n\n        await expect(control).toHaveScreenshot('custom-control.png');\n\n        if (!isMobile) {\n            await expect(selectComponent).toHaveScreenshot('arrow-slot-svg.png');\n        } else {\n            await expect(selectComponent).toHaveScreenshot('more-slot-svg.png');\n        }\n    });\n});\n\ntest(`Select - Searchable Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const selectComponent = page.locator('.Searchable').getByTestId('test-select');\n        await expect(selectComponent).toHaveScreenshot('select-initial.png');\n\n        const valueChange = await mockEventListener(selectComponent, 'change');\n\n        await selectComponent.evaluate(async (s: Select, displayItems) => {\n            s.items = displayItems;\n            await s.updateComplete;\n        }, displayItems);\n\n        await selectComponent.click();\n\n        if (isMobile) {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveScreenshot('select-dialog.png');\n        } else {\n            const container = selectComponent.locator('#items-container');\n            await expect(container).toHaveScreenshot('select-items-container.png');\n        }\n\n        const items = selectComponent.locator('.item');\n        await expect(items).toHaveCount(10);\n\n        const searchField = selectComponent.locator('#searchField');\n        await expect(searchField).toHaveCount(1);\n        await expect(searchField).toHaveScreenshot('search-field.png');\n\n        const searchValue = 'Tony';\n        await searchField.type(searchValue);\n\n        const searchedItems = selectComponent.locator('.item');\n        await expect(searchedItems).toHaveCount(1);\n\n        await searchedItems.click();\n        await expect(valueChange).toBeCalledTimes(1);\n\n        await expect(selectComponent).toHaveAttribute('value', JSON.stringify(displayItems[2]));\n        await expect(selectComponent).toHaveScreenshot('select-after.png');\n    });\n});\n\ntest(`Select - Custom Search Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const args = await getStoryArgs(page, 'Custom_Search');\n        const argItems = args.items as Record<string, unknown>[];\n        const selectComponent = page.locator('.Custom_Search').getByTestId('test-select');\n        await expect(selectComponent).toHaveScreenshot('select-initial.png');\n\n        const valueChange = await mockEventListener(selectComponent, 'change');\n\n        await selectComponent.click();\n\n        if (isMobile) {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveScreenshot('select-dialog.png');\n        } else {\n            const container = selectComponent.locator('#items-container');\n            await expect(container).toHaveScreenshot('select-items-container.png');\n        }\n\n        const items = selectComponent.locator('.item');\n        await expect(items).toHaveCount(5);\n\n        const searchField = selectComponent.locator('#searchField');\n        await expect(searchField).toHaveCount(1);\n        await expect(searchField).toHaveScreenshot('search-field.png');\n\n        const searchValue = 'Clark';\n        await searchField.type(searchValue);\n\n        const searchedItems = selectComponent.locator('.item');\n        await expect(searchedItems).toHaveCount(1);\n\n        await searchedItems.click();\n        await expect(valueChange).toBeCalledTimes(1);\n\n        await expect(selectComponent).toHaveAttribute('value', argItems[1]);\n        await expect(selectComponent).toHaveScreenshot('select-after.png');\n    });\n});\n\ntest(`Select - Server Side Filtering Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const selectComponent = page.locator('.Server_Side_Filtering').getByTestId('test-select');\n        await expect(selectComponent).toHaveScreenshot('select-initial.png');\n\n        await selectComponent.evaluate(async (s: Select, stringItems) => {\n            async function promiseSearchFilter(filterValue: string) {\n                await new Promise<void>((r) => setTimeout(() => r(), 10));\n                return customSearch(filterValue, stringItems);\n            }\n\n            function customSearch(filterValue: string, items: SelectTypes) {\n                if (Array.isArray(items) && filterValue) {\n                    return (items = (items as (string | Record<string, unknown>)[]).filter((i) => itemFilter(filterValue, i)) as SelectTypes);\n                } else {\n                    return items;\n                }\n            }\n\n            function itemFilter(filterValue: string, item: string | Record<string, unknown>) {\n                return item.toString().toLowerCase().includes(filterValue.toLowerCase());\n            }\n\n            s.items = promiseSearchFilter as (filterValue?: string | undefined) => SelectItems;\n            await s.updateComplete;\n        }, stringItems);\n\n        const valueChange = await mockEventListener(selectComponent, 'change');\n\n        await selectComponent.click();\n\n        await page.waitForTimeout(30);\n\n        if (isMobile) {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveScreenshot('select-dialog.png');\n        } else {\n            const container = selectComponent.locator('#items-container');\n            await expect(container).toHaveScreenshot('select-items-container.png');\n        }\n\n        const items = selectComponent.locator('.item');\n        await expect(items).toHaveCount(5);\n\n        const searchField = selectComponent.locator('#searchField');\n        await expect(searchField).toHaveCount(1);\n        await expect(searchField).toHaveScreenshot('search-field.png');\n\n        const searchValue = 'Clark Kent';\n        await searchField.type(searchValue);\n\n        const searchedItems = selectComponent.locator('.item');\n        await expect(searchedItems).toHaveCount(1);\n\n        await searchedItems.click();\n        await expect(valueChange).toBeCalledTimes(1);\n\n        await expect(selectComponent).toHaveAttribute('value', searchValue);\n        await expect(selectComponent).toHaveScreenshot('select-after.png');\n    });\n});\n\ntest(`Select - Custom Search Slot Behaviour`, async ({ page, isMobile }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/select/');\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const selectComponent = page.locator('.Custom_Search_Slot').getByTestId('test-select');\n        await expect(selectComponent).toHaveScreenshot('select-initial.png');\n\n        await selectComponent.click();\n\n        if (isMobile) {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveScreenshot('select-dialog.png');\n        } else {\n            const container = selectComponent.locator('#items-container');\n            await expect(container).toHaveScreenshot('select-items-container.png');\n        }\n\n        const items = selectComponent.locator('.item');\n        await expect(items).toHaveCount(5);\n\n        const searchField = selectComponent.locator('#searchField');\n        await expect(searchField).toHaveCount(1);\n        await expect(searchField).toHaveScreenshot('search-field.png');\n\n        const searchValue = 'Steve';\n        await searchField.type(searchValue);\n\n        if (isMobile) {\n            const dialog = selectComponent.locator('dialog');\n            await expect(dialog).toHaveScreenshot('select-dialog-after.png');\n        } else {\n            const container = selectComponent.locator('#items-container');\n            await expect(container).toHaveScreenshot('select-items-container-after.png');\n        }\n    });\n});\n\ntest('Select - Label Behaviour', testLabelBehaviour('omni-select'));\ntest('Select - Hint Behaviour', testHintBehaviour('omni-select'));\ntest('Select - Error Behaviour', testErrorBehaviour('omni-select'));\ntest('Select - Clearable Behaviour', testClearableBehaviour('omni-select'));\ntest('Select - Custom Clear Slot Behaviour', testCustomClearableSlotBehaviour('omni-select'));\ntest('Select - Prefix Behaviour', testPrefixBehaviour('omni-select'));\ntest('Select - Suffix Behaviour', testSuffixBehaviour('omni-select'));\n"]}