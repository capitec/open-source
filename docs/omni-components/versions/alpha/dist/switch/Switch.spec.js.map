{"version":3,"file":"Switch.spec.js","sourceRoot":"","sources":["../../src/switch/Switch.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import * as jestMock from 'jest-mock';\nimport { test, expect, withCoverage } from '../utils/JestPlaywright.js';\nimport { Args } from './Switch.stories.js';\n\ntest(`Switch - Event Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/switch/');\n\n        const switchElement = page.locator('.Interactive').getByTestId('test-switch');\n\n        const valueChange = jestMock.fn();\n\n        await page.exposeFunction('jestValueChange', () => valueChange());\n        await switchElement.evaluate((node) => {\n            node.addEventListener('value-change', () => window.jestValueChange());\n        });\n\n        const content = switchElement.locator('#content');\n        await content.click({\n            force: true\n        });\n\n        await expect(valueChange).toBeCalledTimes(1);\n    });\n});\n\ntest(`Switch - Label Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/switch/');\n\n        const args = await page.locator('story-renderer[key=Label]').evaluate(getStoryArgs());\n        const switchElement = page.locator('.Label').getByTestId('test-switch');\n        const labelElement = switchElement.locator('label');\n\n        await expect(labelElement).toHaveText(args.label);\n        await expect(switchElement).toHaveScreenshot('switch-label.png');\n    });\n});\n\ntest(`Switch - Hint Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/switch/');\n\n        const args = await page.locator('story-renderer[key=Hint]').evaluate(getStoryArgs());\n        const switchElement = page.locator('.Hint').getByTestId('test-switch');\n        const hintElement = switchElement.locator('.hint');\n\n        await expect(hintElement).toHaveText(args.hint);\n        await expect(switchElement).toHaveScreenshot('switch-hint.png');\n    });\n});\n\ntest(`Switch - Error Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/switch/');\n\n        const args = await page.locator('story-renderer[key=Error_Label]').evaluate(getStoryArgs());\n        const switchElement = page.locator('.Error_Label').getByTestId('test-switch');\n        const errorElement = switchElement.locator('.error');\n\n        await expect(errorElement).toHaveText(args.error);\n        await expect(switchElement).toHaveScreenshot('switch-error.png');\n    });\n});\n\ntest(`Switch - Checked / Unchecked Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/switch/');\n\n        const switchElement = page.locator('.Checked').getByTestId('test-switch');\n        const checkedElement = switchElement.locator('.checked');\n\n        // Test checked.\n        await expect(checkedElement).toBeVisible();\n        await expect(switchElement).toHaveScreenshot('switch-checked.png');\n\n        await switchElement.click();\n\n        // Test unchecked.\n        const uncheckedElement = switchElement.locator('.checked');\n        await expect(uncheckedElement).not.toBeVisible();\n        await expect(switchElement).toHaveScreenshot('switch-unchecked.png');\n    });\n});\n\ntest(`Switch - Disabled Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/switch/');\n\n        const switchElement = page.locator('.Disabled').getByTestId('test-switch');\n        const disabledElement = switchElement.locator('.disabled');\n\n        // Test initial disabled.\n        await expect(disabledElement).toBeVisible();\n        await expect(switchElement).toHaveScreenshot('switch-disabled.png');\n\n        // Test not clickable when disabled.\n        const click = jestMock.fn();\n        await page.exposeFunction('setSwitchClicked', () => click());\n        await switchElement.evaluate((n) => n.addEventListener('click', () => window.setSwitchClicked()));\n\n        await switchElement.click({\n            force: true\n        });\n        const content = switchElement.locator('#content');\n        await content.press('Space');\n\n        await expect(click).toBeCalledTimes(0);\n\n        await expect(switchElement).toHaveScreenshot('switch-disabled-click.png');\n    });\n});\n\ntest(`Switch - Slot Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/switch/');\n\n        const switchElement = page.locator('.Slot').getByTestId('test-switch');\n        const slottedContent = await switchElement.innerHTML();\n\n        await expect(slottedContent).toEqual('Slotted');\n        await expect(switchElement).toHaveScreenshot('switch-slot.png');\n    });\n});\ndeclare global {\n    interface Window {\n        setSwitchClicked: () => void;\n        jestValueChange: () => void;\n    }\n}\nfunction getStoryArgs() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (storyRenderer: any) => storyRenderer?.story?.args as Args;\n}\n"]}