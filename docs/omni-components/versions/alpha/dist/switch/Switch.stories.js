import"../chunks-js/chunk.TBKWSV63.js";import{a as y}from"../chunks-js/chunk.IRJIQSYL.js";import{b as m}from"../chunks-js/chunk.MHLMY33S.js";import{a as s}from"../chunks-js/chunk.PJH7M65U.js";import{c,d as l}from"../chunks-js/chunk.N6OKW4B2.js";import{d as i}from"../chunks-js/chunk.W54IKPJD.js";import"../chunks-js/chunk.2HYOR3YM.js";import"../chunks-js/chunk.CWNKFZ3E.js";import"../chunks-js/chunk.S2K25ADN.js";import{b as r}from"../chunks-js/chunk.F6MIXR4E.js";import{h as S,m as p,p as b}from"../chunks-js/chunk.BF43NN75.js";p();b();var h=S(y(),1);var M={title:"UI Components/Switch",component:"omni-switch"},q={render:t=>r`
    <omni-switch
      data-testid="test-switch"
      label="${s(t.label)}"
      .data="${t.data}"
      hint="${s(t.hint)}"
      error="${s(t.error)}"
      ?checked="${t.checked}"
      ?disabled="${t.disabled}"></omni-switch>
  `,name:"Interactive",args:{label:"",data:{},hint:"",error:"",checked:!1,disabled:!1},play:async t=>{var o;let a=c(t.canvasElement).getByTestId("test-switch"),n=h.fn();a.addEventListener("value-change",n);let e=(o=a.shadowRoot)==null?void 0:o.getElementById("content");await m.click(e,{pointerEventsCheck:0}),await l.keyDown(e,{key:" ",code:"Space"}),await i(n).toBeCalledTimes(2)}},E={render:t=>r` <omni-switch data-testid="test-switch" label="${t.label}"></omni-switch> `,frameworkSources:[{framework:"React",load:t=>`import { OmniSwitch } from "@capitec/omni-components-react/switch";

const App = () => <OmniSwitch${t.label?` label='${t.label}'`:""}/>;`}],description:"Set text content to display next to the component.",args:{label:"Label"},play:async t=>{var e,o;let n=(e=c(t.canvasElement).getByTestId("test-switch").shadowRoot)==null?void 0:e.querySelector(".label");await i(n).toHaveTextContent((o=E.args)==null?void 0:o.label)}},f={render:t=>r` <omni-switch data-testid="test-switch" label="${t.label}" hint="${t.hint}"></omni-switch> `,frameworkSources:[{framework:"React",load:t=>`import { OmniSwitch } from "@capitec/omni-components-react/switch";

const App = () => <OmniSwitch${t.label?` label='${t.label}'`:""}${t.hint?` hint='${t.hint}'`:""}/>;`}],description:"Set text content to display as a hint.",args:{label:"Hint",hint:"This is a hint"},play:async t=>{var e,o;let n=(e=c(t.canvasElement).getByTestId("test-switch").shadowRoot)==null?void 0:e.querySelector(".hint");await i(n).toHaveTextContent((o=f.args)==null?void 0:o.hint)}},k={name:"Error",render:t=>r` <omni-switch data-testid="test-switch" label="${t.label}" error="${t.error}"></omni-switch> `,frameworkSources:[{framework:"React",load:t=>`import { OmniSwitch } from "@capitec/omni-components-react/switch";

const App = () => <OmniSwitch${t.label?` label='${t.label}'`:""}${t.error?` error='${t.error}'`:""}/>;`}],description:"Set text content to display as an error.",args:{label:"Error",error:"This is an error state"},play:async t=>{var e,o;let n=(e=c(t.canvasElement).getByTestId("test-switch").shadowRoot)==null?void 0:e.querySelector(".error");await i(n).toHaveTextContent((o=k.args)==null?void 0:o.error)}},j={render:t=>r` <omni-switch data-testid="test-switch" label="${t.label}" ?checked="${t.checked}"></omni-switch> `,frameworkSources:[{framework:"React",load:t=>`import { OmniSwitch } from "@capitec/omni-components-react/switch";

const App = () => <OmniSwitch${t.label?` label='${t.label}'`:""}${t.checked?" checked":""}/>;`}],description:"Set the component to a checked state.",args:{label:"Checked",checked:!0},play:async t=>{var e;let n=(e=c(t.canvasElement).getByTestId("test-switch").shadowRoot)==null?void 0:e.querySelector(".checked");await i(n).toBeTruthy()}},D={render:t=>r` <omni-switch data-testid="test-switch" label="${t.label}" ?disabled="${t.disabled}"></omni-switch> `,frameworkSources:[{framework:"React",load:t=>`import { OmniSwitch } from "@capitec/omni-components-react/switch";

const App = () => <OmniSwitch${t.label?` label='${t.label}'`:""}${t.disabled?" disabled":""}/>;`}],description:"Prevent interaction (pointer events).",args:{label:"Disabled",disabled:!0},play:async t=>{var d,w;let a=c(t.canvasElement).getByTestId("test-switch"),n=h.fn();a.addEventListener("value-change",n);let e=(d=a.shadowRoot)==null?void 0:d.querySelector(".disabled");await i(e).toBeTruthy();let o=(w=a.shadowRoot)==null?void 0:w.getElementById("content");await m.click(o,{pointerEventsCheck:0}),await l.keyDown(o,{key:" ",code:"Space"}),await i(n).toBeCalledTimes(0)}};export{j as Checked,D as Disabled,k as Error_Label,f as Hint,q as Interactive,E as Label,M as default};
//# sourceMappingURL=Switch.stories.js.map
