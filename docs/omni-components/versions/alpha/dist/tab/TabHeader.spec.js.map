{"version":3,"file":"TabHeader.spec.js","sourceRoot":"","sources":["../../src/tab/TabHeader.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,iBAAiB,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAE3F,IAAI,CAAC,iCAAiC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IACvD,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAE3C,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;QACzE,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC;QAEjE,yBAAyB;QACzB,MAAM,SAAS,GAAG,MAAM,iBAAiB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAElE,0BAA0B;QAC1B,MAAM,gBAAgB,GAAG,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QAC7D,MAAM,MAAM,CAAC,gBAAgB,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAE9C,wBAAwB;QACxB,MAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC1C,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAElC,4BAA4B;QAC5B,MAAM,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACzE,MAAM,MAAM,CAAC,eAAe,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAE7C,2CAA2C;QAC3C,MAAM,QAAQ,GAAG,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACtD,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAEtC,2BAA2B;QAC3B,MAAM,cAAc,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAE/C,4CAA4C;QAC5C,MAAM,kBAAkB,GAAG,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC/D,kDAAkD;QAClD,MAAM,GAAG,GAAG,kBAAkB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC9C,4DAA4D;QAC5D,MAAM,GAAG,CAAC,KAAK,EAAE,CAAC;QAElB,8CAA8C;QAC9C,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QAC3C,uDAAuD;QACvD,MAAM,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QACxD,mEAAmE;QACnE,MAAM,MAAM,CAAC,cAAc,CAAC,CAAC,eAAe,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;QAChE,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { test, expect, mockEventListener, withCoverage } from '../utils/JestPlaywright.js';\n\ntest(`Tab Header - Advanced Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/tab-header/');\n\n        const tabGroup = page.locator('.Advanced').getByTestId('test-tab-group');\n        await expect(tabGroup).toHaveScreenshot('tab-group-initial.png');\n\n        // Mock tab-select event.\n        const tabSelect = await mockEventListener(tabGroup, 'tab-select');\n\n        // Get all the tab headers\n        const nestedTabHeaders = tabGroup.locator('omni-tab-header');\n        await expect(nestedTabHeaders).toHaveCount(4);\n\n        // Get all the omni-tabs\n        const tabs = tabGroup.locator('omni-tab');\n        await expect(tabs).toHaveCount(4);\n\n        // Get the active tab header\n        const activeTabHeader = tabGroup.locator('omni-tab-header[data-active]');\n        await expect(activeTabHeader).toHaveCount(1);\n\n        // Get the omni-icon in the tab header slot\n        const omniIcon = activeTabHeader.locator('omni-icon');\n        await expect(omniIcon).toHaveCount(1);\n\n        // Get the third tab header\n        const thirdTabHeader = nestedTabHeaders.nth(2);\n\n        // Get the omni-icon of the third tab header\n        const thirdTabHeaderIcon = thirdTabHeader.locator('omni-icon');\n        // Get the SVG slotted in the omni-icon component.\n        const svg = thirdTabHeaderIcon.locator('svg');\n        // Click the svg this should set the third tab to be active.\n        await svg.click();\n\n        // Confirm that the tab select event occurred.\n        await expect(tabSelect).toBeCalledTimes(1);\n        // Confirm that the first tab has the active attribute.\n        await expect(tabs.nth(2)).toHaveAttribute('active', '');\n        // Confirm that the first tab header has the data-active attribute.\n        await expect(thirdTabHeader).toHaveAttribute('data-active', '');\n        await expect(tabGroup).toHaveScreenshot('tab-header-clicked.png');\n    });\n});\n"]}