{"version":3,"file":"TextField.spec.js","sourceRoot":"","sources":["../../src/text-field/TextField.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,kBAAkB,EAClB,iBAAiB,EACjB,kBAAkB,EAClB,kBAAkB,EAClB,sBAAsB,EACtB,gCAAgC,EAChC,mBAAmB,EACnB,mBAAmB,EACnB,qBAAqB,EACxB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,iBAAiB,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAG3F,IAAI,CAAC,mCAAmC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;IACzD,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;QAChC,MAAM,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QAC3C,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEhD,MAAM,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;QAEhD,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,KAAK,EAAE,CAAC;QACxD,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAY,EAAE,EAAE;YACtC,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;YACb,MAAM,CAAC,CAAC,cAAc,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;QAC3D,MAAM,OAAO,GAAG,MAAM,iBAAiB,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAE5D,MAAM,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAEpD,MAAM,KAAK,GAAG,cAAc,CAAC;QAC7B,MAAM,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,MAAM,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAE5C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACpD,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,8BAA8B,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC5E,IAAI,CAAC,6BAA6B,EAAE,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC1E,IAAI,CAAC,8BAA8B,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC5E,IAAI,CAAC,8BAA8B,EAAE,kBAAkB,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC5E,IAAI,CAAC,kCAAkC,EAAE,sBAAsB,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACpF,IAAI,CAAC,0CAA0C,EAAE,gCAAgC,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACtG,IAAI,CAAC,+BAA+B,EAAE,mBAAmB,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC9E,IAAI,CAAC,+BAA+B,EAAE,mBAAmB,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC9E,IAAI,CAAC,iCAAiC,EAAE,qBAAqB,CAAC,iBAAiB,CAAC,CAAC,CAAC","sourcesContent":["import {\n    testLabelBehaviour,\n    testHintBehaviour,\n    testErrorBehaviour,\n    testValueBehaviour,\n    testClearableBehaviour,\n    testCustomClearableSlotBehaviour,\n    testPrefixBehaviour,\n    testSuffixBehaviour,\n    testDisabledBehaviour\n} from '../core/OmniInputPlaywright.js';\nimport { test, expect, mockEventListener, withCoverage } from '../utils/JestPlaywright.js';\nimport type { TextField } from './TextField.js';\n\ntest(`Text Field - Visual and Behaviour`, async ({ page }) => {\n    await withCoverage(page, async () => {\n        await page.goto('/components/text-field/');\n        await page.evaluate(() => document.fonts.ready);\n\n        await page.waitForSelector('[data-testid]', {});\n\n        const textField = page.locator('[data-testid]').first();\n        textField.evaluate(async (t: TextField) => {\n            t.value = '';\n            await t.updateComplete;\n        });\n        await expect(textField).toHaveScreenshot('text-field.png');\n        const inputFn = await mockEventListener(textField, 'input');\n\n        const inputField = textField.locator('#inputField');\n\n        const value = 'Value Update';\n        await inputField.type(value);\n\n        await expect(inputField).toHaveValue(value);\n\n        await expect(inputFn).toBeCalledTimes(value.length);\n        await expect(textField).toHaveScreenshot('text-field-value.png');\n    });\n});\n\ntest('Text Field - Label Behaviour', testLabelBehaviour('omni-text-field'));\ntest('Text Field - Hint Behaviour', testHintBehaviour('omni-text-field'));\ntest('Text Field - Error Behaviour', testErrorBehaviour('omni-text-field'));\ntest('Text Field - Value Behaviour', testValueBehaviour('omni-text-field'));\ntest('Text Field - Clearable Behaviour', testClearableBehaviour('omni-text-field'));\ntest('Text Field - Custom Clear Slot Behaviour', testCustomClearableSlotBehaviour('omni-text-field'));\ntest('Text Field - Prefix Behaviour', testPrefixBehaviour('omni-text-field'));\ntest('Text Field - Suffix Behaviour', testSuffixBehaviour('omni-text-field'));\ntest('Text Field - Disabled Behaviour', testDisabledBehaviour('omni-text-field'));\n"]}