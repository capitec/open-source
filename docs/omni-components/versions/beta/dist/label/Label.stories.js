import"../chunks-js/chunk.5TKLJSC4.js";import{a as b}from"../chunks-js/chunk.PJH7M65U.js";import{a as p}from"../chunks-js/chunk.G3QHRCKP.js";import{c as l}from"../chunks-js/chunk.N6OKW4B2.js";import{d as n}from"../chunks-js/chunk.W54IKPJD.js";import"../chunks-js/chunk.CWNKFZ3E.js";import"../chunks-js/chunk.S2K25ADN.js";import{b as o}from"../chunks-js/chunk.F6MIXR4E.js";import{m as r,p as i}from"../chunks-js/chunk.BF43NN75.js";r();i();var m=["default","title","subtitle","strong"],R={title:"UI Components/Label",component:"omni-label",argTypes:{type:{control:{type:"radio",options:m},"[Default Slot]":{control:"text"}}}},c={render:t=>o`<omni-label data-testid="test-label" label="${b(t.label)}" type="${t.type}">${p(t["[Default Slot]"])}</omni-label> `,name:"Interactive",args:{label:"Label",type:"default","[Default Slot]":void 0},play:async t=>{var e;let a=l(t.canvasElement).getByTestId("test-label");await n(a.shadowRoot).toHaveTextContent((e=c.args)==null?void 0:e.label)}},g={render:t=>o` <omni-label data-testid="test-label" label="${t.label}" type="${t.type}"> </omni-label> `,description:"Set the text to display with the styles of a title.",args:{label:"Title",type:"title"},play:async t=>{var e;let a=l(t.canvasElement).getByTestId("test-label");await n(a.shadowRoot).toHaveTextContent((e=g.args)==null?void 0:e.label)}},f={render:t=>o` <omni-label data-testid="test-label" label="${t.label}" type="${t.type}"> </omni-label> `,description:"Set the text to display with the styles of a subtitle.",args:{label:"Subtitle",type:"subtitle"},play:async t=>{var e;let a=l(t.canvasElement).getByTestId("test-label");await n(a.shadowRoot).toHaveTextContent((e=f.args)==null?void 0:e.label)}},S={render:t=>o` <omni-label data-testid="test-label" label="${t.label}" type="${t.type}"></omni-label>`,description:"Set the text to display with a bold font style.",args:{label:"Strong",type:"strong"},play:async t=>{var e;let a=l(t.canvasElement).getByTestId("test-label");await n(a.shadowRoot).toHaveTextContent((e=S.args)==null?void 0:e.label)}},D={render:t=>o`
        <omni-label data-testid="test-label" type="${t.type}">
            <span>This is <span style="text-decoration: underline;">underlined</span> text inside a paragraph.</span>
        </omni-label>
    `,description:"Set html content to display within.",args:{label:"Slot",type:"strong"},play:async t=>{var s;let e=(s=l(t.canvasElement).getByTestId("test-label").shadowRoot)==null?void 0:s.querySelector("slot"),d=e==null?void 0:e.assignedElements().find(y=>y.innerHTML.includes("text inside a paragraph."));await n(d).toBeTruthy()}};export{c as Interactive,D as Slot,S as Strong,f as Subtitle,g as Title,R as default};
//# sourceMappingURL=Label.stories.js.map
