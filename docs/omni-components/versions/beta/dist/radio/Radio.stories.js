import"../chunks-js/chunk.MVFK6HI4.js";import{a as S}from"../chunks-js/chunk.IRJIQSYL.js";import{a as s}from"../chunks-js/chunk.PJH7M65U.js";import{a as g}from"../chunks-js/chunk.G3QHRCKP.js";import{b as c}from"../chunks-js/chunk.MHLMY33S.js";import{c as i,d as l}from"../chunks-js/chunk.N6OKW4B2.js";import{d as n}from"../chunks-js/chunk.W54IKPJD.js";import"../chunks-js/chunk.2HYOR3YM.js";import"../chunks-js/chunk.CWNKFZ3E.js";import"../chunks-js/chunk.S2K25ADN.js";import{b as d}from"../chunks-js/chunk.F6MIXR4E.js";import{h as E,m as h,p as b}from"../chunks-js/chunk.BF43NN75.js";h();b();var m=E(S(),1);var j={title:"UI Components/Radio",component:"omni-radio"},N={render:e=>d`
        <omni-radio
            data-testid="test-radio"
            label="${s(e.label)}"
            .data="${e.data}"
            hint="${s(e.hint)}"
            error="${s(e.error)}"
            ?checked="${e.checked}"
            ?disabled="${e.disabled}">${g(e["[Default Slot]"])}</omni-radio>
    `,name:"Interactive",args:{label:"",data:{},hint:"",error:"",checked:!1,disabled:!1,"[Default Slot]":void 0},play:async e=>{var a;let r=i(e.canvasElement).getByTestId("test-radio");r.focus();let o=(a=r.shadowRoot)==null?void 0:a.getElementById("content"),t=m.fn();r.addEventListener("value-change",t),await c.click(o,{pointerEventsCheck:0}),await l.keyDown(o,{key:" ",code:"Space"}),await n(t).toBeCalledTimes(2)}},v={render:e=>d`<omni-radio data-testid="test-radio" label="${e.label}"></omni-radio>`,description:"Set a text value to display next to the component.",args:{label:"Label"},play:async e=>{var t,a;let o=(t=i(e.canvasElement).getByTestId("test-radio").shadowRoot)==null?void 0:t.getElementById("label");await n(o).toHaveTextContent((a=v.args)==null?void 0:a.label)}},T={render:e=>d`<omni-radio data-testid="test-radio" label="${e.label}" hint="${e.hint}"></omni-radio>`,description:"Set a text value to as a hint.",args:{label:"Hint",hint:"This is a hint"},play:async e=>{var t,a;let o=(t=i(e.canvasElement).getByTestId("test-radio").shadowRoot)==null?void 0:t.querySelector(".hint");await n(o).toHaveTextContent((a=T.args)==null?void 0:a.hint)}},f={name:"Error",render:e=>d`<omni-radio data-testid="test-radio" label="${e.label}" error="${e.error}"></omni-radio>`,description:"Set a text value to display as an error.",args:{label:"Error",error:"This is an error state"},play:async e=>{var t,a;let o=(t=i(e.canvasElement).getByTestId("test-radio").shadowRoot)==null?void 0:t.querySelector(".error");await n(o).toHaveTextContent((a=f.args)==null?void 0:a.error)}},P={render:e=>d`<omni-radio data-testid="test-radio" label="${e.label}" ?checked="${e.checked}"></omni-radio>`,description:"Set the component to a checked state.",args:{label:"Checked",checked:!0},play:async e=>{var t;let o=(t=i(e.canvasElement).getByTestId("test-radio").shadowRoot)==null?void 0:t.querySelector(".checked");await n(o).toBeTruthy()}},U={render:e=>d`<omni-radio data-testid="test-radio" label="${e.label}" ?disabled="${e.disabled}"></omni-radio>`,description:"Prevent interaction (pointer events).",args:{label:"Disabled",disabled:!0},play:async e=>{var p,y;let r=i(e.canvasElement).getByTestId("test-radio"),o=m.fn();r.addEventListener("value-change",o);let t=(p=r.shadowRoot)==null?void 0:p.querySelector(".disabled");await n(t).toBeTruthy();let a=(y=r.shadowRoot)==null?void 0:y.getElementById("content");await c.click(a,{pointerEventsCheck:0}),await l.keyDown(a,{key:" ",code:"Space"}),await n(o).toBeCalledTimes(0)}},_={render:()=>d`
        <omni-radio data-testid="test-radio">Slotted</omni-radio>
    `,name:"Slot",description:"Set content to display within.",args:{},play:async e=>{let o=i(e.canvasElement).getByTestId("test-radio").innerHTML;await n(o).toEqual("Slotted")}};export{P as Checked,U as Disabled,f as Error_Label,T as Hint,N as Interactive,v as Label,_ as Slot,j as default};
//# sourceMappingURL=Radio.stories.js.map
