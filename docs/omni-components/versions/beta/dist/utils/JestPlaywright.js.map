{"version":3,"file":"JestPlaywright.js","sourceRoot":"","sources":["../../src/utils/JestPlaywright.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport fs from 'fs';\n// import { platform } from 'os';\nimport {\n    expect as expectPatched,\n    test,\n    type Locator,\n    type Page,\n    type PageScreenshotOptions,\n    type LocatorScreenshotOptions,\n    type ElementHandle\n} from '@playwright/test';\nexport * from '@playwright/test';\nimport { fn } from 'jest-mock';\n//@ts-ignore\nimport jsdom from 'jsdom';\n//@ts-ignore\nimport fetch from 'node-fetch';\nimport { v4 } from 'uuid';\n//@ts-ignore\nimport XMLHttpRequest from 'xhr2';\n\nglobal.window = global.window || new jsdom.JSDOM().window;\nglobal.document = global.document || window.document;\nglobal.Document = global.Document || window.Document;\nglobal.HTMLElement = global.HTMLElement || window.HTMLElement;\nglobal.SVGElement = global.SVGElement || window.SVGElement;\nglobal.XMLHttpRequest = global.XMLHttpRequest || XMLHttpRequest;\nif (!global.window.fetch) {\n    global.window.fetch = fetch;\n}\nif (!global.fetch) {\n    global.fetch = global.window.fetch;\n}\n\n//Setup browser shims\nObject.keys(window).forEach((key) => {\n    if (!(global as any)[key]) {\n        try {\n            (global as any)[key] = (window as any)[key];\n        } catch (error) {\n            // Ignore\n        }\n    }\n});\n\nconst expect = expectPatched;\n\nif (!process.env.CI && !process.env.PW_SCREENSHOT_TESTING) {\n    expect.extend({\n        toHaveScreenshot: async function (\n            received: Locator | Page,\n            name: string | Array<string>,\n            options?: PageScreenshotOptions | LocatorScreenshotOptions\n        ) {\n            const testInfo = test.info();\n\n            if (Array.isArray(name)) {\n                name = name.join('/');\n            }\n\n            if (testInfo && received) {\n                testInfo.annotations.push({ type: 'warning', description: `Screenshot assertion was skipped! (${name})` });\n\n                if (received.screenshot) {\n                    const screenshot = await received.screenshot(options);\n                    await testInfo.attach(name, { body: screenshot, contentType: 'image/png' });\n                }\n            }\n            return {\n                pass: true,\n                message: () => 'No \"CI\" or \"PW_SCREENSHOT_TESTING\" environment variables set. Skipping screenshot assertion!'\n            };\n        },\n        toMatchSnapshot: async function (received: string | Buffer, name: string | Array<string>) {\n            const testInfo = test.info();\n\n            if (Array.isArray(name)) {\n                name = name.join('/');\n            }\n\n            if (testInfo && received) {\n                testInfo.annotations.push({ type: 'warning', description: `Snapshot assertion was skipped! (${name})` });\n\n                if (typeof received !== 'string') {\n                    await testInfo.attach(name, { body: received, contentType: 'image/png' });\n                }\n            }\n            return {\n                pass: true,\n                message: () => 'No \"CI\" or \"PW_SCREENSHOT_TESTING\" environment variables set. Skipping snapshot assertion!'\n            };\n        }\n    });\n}\n\nasync function withCoverage<T>(this: any, page: Page, testAction: () => T | Promise<T>) {\n    const browserName = page.context()?.browser()?.browserType()?.name();\n\n    // Uncomment for verbose logging from browser console.\n    // await page.on('console', (msg) => {\n    //     if (msg && msg.text) {\n    //       if (typeof msg.text === 'function') {\n    //         console.log('PAGE LOG:', msg.text());\n    //       } else {\n    //         console.log('PAGE LOG:', msg.text);\n    //       }\n    //     } else {\n    //         console.log('PAGE LOG:', msg);\n    //     }\n    // });\n\n    const url = page.url();\n    await page.goto(`http://${process.env.PLAYWRIGHT_HOST_ORIGIN ?? 'localhost'}:6006`);\n    await page.evaluate(() => {\n        window.sessionStorage.setItem('omni-docs-theme-selection', 'light');\n        window.localStorage.setItem('omni-docs-framework-selection', 'HTML');\n    });\n    await page.goBack();\n    if (page.url() !== url) {\n        await page.goto(url);\n    }\n\n    // Only chromium supports coverage\n    if (page.coverage && browserName === 'chromium') {\n        try {\n            //Each test worker must start collecting coverage information for the duration of its tests\n            await page.coverage.startJSCoverage();\n        } catch (error: any) {\n            if (!error.toString().includes('JSCoverage is already enabled')) {\n                throw error;\n            }\n        }\n    }\n\n    let result: any;\n    try {\n        result = await testAction.apply(this);\n    } finally {\n        // Only chromium supports coverage\n        if (page.coverage && browserName === 'chromium' && !page.isClosed()) {\n            //Each test worker must collect and save its coverage information. The last worker will also report the coverage\n\n            const coverage = await page.coverage.stopJSCoverage();\n\n            //Save coverage information for current test worker\n            fs.writeFileSync(`coverage/${v4()}.json`, JSON.stringify(coverage), {\n                encoding: 'utf-8'\n            });\n        }\n    }\n\n    return result;\n}\n\n/**\n * Read story args from story renderer with provided key\n */\nasync function getStoryArgs<T = any>(page: Page, key: string, readySelector = '[data-testid]') {\n    await page.waitForSelector(readySelector);\n\n    const args = await page.locator(`story-renderer[key=${key}]`).evaluate((storyRenderer: any) => storyRenderer?.story?.args as T);\n    return args;\n}\n\nasync function mockEventListener(locatorOrHandle: Locator | ElementHandle | null | undefined, eventName: string, callback?: (e: Event) => void) {\n    const tempFunction = `mock_${v4()}`;\n    const eventFunction = fn();\n\n    if (!locatorOrHandle) {\n        return eventFunction;\n    }\n\n    let page: Page;\n    const evalFunc = (node: HTMLElement, { tempFunction, eventName, fullEvent }: { tempFunction: string; eventName: string; fullEvent: boolean }) => {\n        // Stringify Event https://stackoverflow.com/a/58416333\n        function stringifyObject(object: any, maxDepth = 4, currentDepth = 0) {\n            if (currentDepth > maxDepth) return object?.toString();\n\n            const obj: Record<string, unknown> = {};\n            for (const key in object) {\n                let value = object[key];\n                if (value instanceof Node)\n                    if (value instanceof Element) {\n                        value = value.outerHTML;\n                    } else if (value.textContent) {\n                        value = value.textContent;\n                    } else if ((value as any).id) {\n                        value = { id: (value as any).id };\n                    } else {\n                        value = value.toString();\n                    }\n                else if (value instanceof Window) {\n                    value = 'Window';\n                } else if (value instanceof Object) {\n                    value = stringifyObject(value, maxDepth, currentDepth + 1);\n                }\n\n                obj[key] = value;\n            }\n\n            return currentDepth ? obj : JSON.stringify(obj);\n        }\n\n        node.addEventListener(eventName, (e) => {\n            const eData = fullEvent ? stringifyObject(e) : '';\n            // console.log(e);\n            // console.log(eData);\n            //@ts-ignore\n            window[tempFunction](eData);\n        });\n    };\n    const pageFunction = (e: string) => {\n        eventFunction();\n        if (callback) {\n            callback(JSON.parse(e));\n        }\n    };\n\n    if ((locatorOrHandle as ElementHandle).ownerFrame) {\n        const handle = locatorOrHandle as ElementHandle;\n\n        page = (await handle.ownerFrame())?.page() as Page;\n        await page.exposeFunction(tempFunction, pageFunction);\n\n        await handle.evaluate(evalFunc, { tempFunction, eventName, fullEvent: Boolean(callback) });\n    } else {\n        const locator = locatorOrHandle as Locator;\n\n        page = locator.page() as Page;\n        await page.exposeFunction(tempFunction, pageFunction);\n\n        await locator.evaluate(evalFunc, { tempFunction, eventName, fullEvent: Boolean(callback) });\n    }\n\n    return eventFunction;\n}\n\nfunction createWaitHandle<T = unknown>() {\n    let resolveFn: (value: T) => void;\n    let rejectFn: (reason?: any) => void;\n    const promise = new Promise<T>((resolve, reject) => {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n\n    return {\n        completed: promise,\n        release: resolveFn!,\n        error: rejectFn!\n    };\n}\n\n// TODO: Revisit once playwright clipboard support is completed\n/*\n    clipboard isolation: [feature] clipboard isolation: https://github.com/microsoft/playwright/issues/13097\n    dedicated clipboard API: [Feature] a dedicated clipboard API: https://github.com/microsoft/playwright/issues/15860\n    basic clipboard support via shortcuts: Ctrl+C/V and Cmd+C/V: https://github.com/microsoft/playwright/issues/8114\n*/\n\n// async function keyboardCopy(page: Page): Promise<void> {\n//     await page.context().grantPermissions(['clipboard-read', 'clipboard-write']);\n//     const isMac = platform() === 'darwin';\n//     const modifier = isMac ? 'Meta' : 'Control';\n//     await page.keyboard.press(`${modifier}+KeyC`);\n// }\n\n// async function clipboardCopy(page: Page, content: string): Promise<void> {\n//     await page.context().grantPermissions(['clipboard-read', 'clipboard-write']);\n//     await page.evaluate(`navigator.clipboard.writeText('${content}')`);\n// }\n\n// async function keyboardPaste(page: Page): Promise<void> {\n//     await page.context().grantPermissions(['clipboard-read', 'clipboard-write']);\n//     const isMac = platform() === 'darwin';\n//     const modifier = isMac ? 'Meta' : 'Control';\n//     await page.keyboard.press(`${modifier}+KeyV`);\n// }\n\ndeclare global {\n    // eslint-disable-next-line @typescript-eslint/no-namespace\n    export namespace PlaywrightTest {\n        // eslint-disable-next-line @typescript-eslint/no-empty-interface\n        export interface Matchers<R, T = unknown> extends jest.Matchers {}\n    }\n}\n\nexport { expect, withCoverage, getStoryArgs, mockEventListener, createWaitHandle /*keyboardCopy, keyboardPaste, clipboardCopy*/ };\n"]}